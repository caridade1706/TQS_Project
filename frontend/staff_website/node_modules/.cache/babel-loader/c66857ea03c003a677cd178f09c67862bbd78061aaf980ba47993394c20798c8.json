{"ast":null,"code":"var _jsxFileName = \"/home/rafaela/Desktop/TQS/TQS_Project/frontend/staff_website/src/components/CategoryDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CategoryDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryDisplay() {\n  _s();\n  const [numbers, setNumbers] = useState({\n    A: 1,\n    B: 1,\n    C: 1,\n    D: 1,\n    E: 1,\n    F: 1,\n    G: 1,\n    H: 1\n  });\n  const colors = ['#5AA7FF', '#49C493', '#FFCB2F', '#FF5757', '#BA61EA', '#F16DAA', '#FF922B', '#2F64E0'];\n  const handleIncrement = category => {\n    setNumbers(prev => ({\n      ...prev,\n      [category]: prev[category] + 1\n    }));\n  };\n  const getColorIndex = index => {\n    // Com 8 cores, podemos usar o índice do cartão diretamente\n    // Como estamos mapeando sobre um array de objetos, o índice será sempre válido\n    // e corresponderá ao índice da cor desejada.\n    return index % colors.length;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-category-container\",\n      children: Object.entries(numbers).map(([category, number], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card-category ${getColorIndex(index)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [category, number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleIncrement(category),\n          className: \"call-next-button\",\n          children: \"Call Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(CategoryDisplay, \"nW1f1+zfUcT4CfC1aDeFuQmfiuQ=\");\n_c = CategoryDisplay;\nexport default CategoryDisplay;\nvar _c;\n$RefreshReg$(_c, \"CategoryDisplay\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CategoryDisplay","_s","numbers","setNumbers","A","B","C","D","E","F","G","H","colors","handleIncrement","category","prev","getColorIndex","index","length","children","className","Object","entries","map","number","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/rafaela/Desktop/TQS/TQS_Project/frontend/staff_website/src/components/CategoryDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CategoryDisplay.css';\r\n\r\nfunction CategoryDisplay() {\r\n    const [numbers, setNumbers] = useState({ A: 1, B: 1, C: 1, D: 1, E: 1, F: 1, G: 1, H: 1});\r\n    const colors = ['#5AA7FF', '#49C493', '#FFCB2F', '#FF5757', '#BA61EA', '#F16DAA', '#FF922B', '#2F64E0'];\r\n\r\n    const handleIncrement = (category) => {\r\n        setNumbers(prev => ({...prev, [category]: prev[category] + 1 }));\r\n    };\r\n\r\n    const getColorIndex = (index) => {\r\n    // Com 8 cores, podemos usar o índice do cartão diretamente\r\n    // Como estamos mapeando sobre um array de objetos, o índice será sempre válido\r\n    // e corresponderá ao índice da cor desejada.\r\n    return index % colors.length;\r\n};\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card-category-container\">\r\n                {Object.entries(numbers).map(([category, number], index) => (\r\n                    <div key={category} className={`card-category ${getColorIndex(index)}`}>\r\n                        <span>{category}{number}</span>\r\n                        <button onClick={() => handleIncrement(category)} className=\"call-next-button\">Call Next</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoryDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAC,CAAC,CAAC;EACzF,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEvG,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IAClCX,UAAU,CAACY,IAAI,KAAK;MAAC,GAAGA,IAAI;MAAE,CAACD,QAAQ,GAAGC,IAAI,CAACD,QAAQ,CAAC,GAAG;IAAE,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,MAAME,aAAa,GAAIC,KAAK,IAAK;IACjC;IACA;IACA;IACA,OAAOA,KAAK,GAAGL,MAAM,CAACM,MAAM;EAChC,CAAC;EAIG,oBACInB,OAAA;IAAAoB,QAAA,eACIpB,OAAA;MAAKqB,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EACnCE,MAAM,CAACC,OAAO,CAACpB,OAAO,CAAC,CAACqB,GAAG,CAAC,CAAC,CAACT,QAAQ,EAAEU,MAAM,CAAC,EAAEP,KAAK,kBACnDlB,OAAA;QAAoBqB,SAAS,EAAG,iBAAgBJ,aAAa,CAACC,KAAK,CAAE,EAAE;QAAAE,QAAA,gBACnEpB,OAAA;UAAAoB,QAAA,GAAOL,QAAQ,EAAEU,MAAM;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/B7B,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACC,QAAQ,CAAE;UAACM,SAAS,EAAC,kBAAkB;UAAAD,QAAA,EAAC;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF3Fd,QAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CA7BQD,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AA+BxB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}